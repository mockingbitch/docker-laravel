version: "3.1"
services:
  worker:
    build: .docker/worker
    container_name: worker
    working_dir: /var/www/html
    tty: true
    volumes:
      - ./app/:/var/www/html
    networks:
      - app-network
  server:
    build: .docker/server
    container_name: server
    working_dir: /var/www/html
    volumes:
      - ./app:/var/www/html
      - ./.docker/server/conf/app.conf:/etc/nginx/conf.d/nginx.conf
      - ./.docker/logs/nginx_log:/var/log/nginx
    ports:
      - "81:80"
    depends_on:
      - worker
    links:
      - worker
    networks:
      - app-network
  database:
    platform: linux/x86_64
    build: .docker/database
    container_name: database
    ports:
      - "3306:3306"
    volumes:
      - ./.docker/data:/docker-entrypoint-initdb.d
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-database}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-password}
      MYSQL_PASSWORD: ${DB_PASSWORD:-password}
      MYSQL_USER: ${DB_USERNAME:-user}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    restart: unless-stopped
    networks:
      - app-network
  checker:
    container_name: checker
    build:
      context: .docker/checker
    restart: 'no'
    tty: true
    volumes:
      - ./:/var/www/html
    depends_on:
      - database
    networks:
      - app-network
networks:
  app-network:
    driver: bridge